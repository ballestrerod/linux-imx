/*
 * Copyright 2017 NXP
 * Copyright 2018-2019 Variscite Ltd.
 * Copyright 2019 Leonardo S.p.A.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

#include "fsl-imx8mq.dtsi"

/ {
	model = "Leonardo MX8M eNOBU w/ EMMC+WIFI+HDMI";
	compatible = "leonardo,imx8m-enobu", "fsl,imx8mq";

        aliases {
		spi3 = &spi_fpga;
        };

	chosen {
		bootargs = "console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200";
		stdout-path = &uart1;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_audio: audio_vdd {
			compatible = "regulator-fixed";
			regulator-name = "wm8904_supply";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_wifi_en: wifi_en {
			compatible = "regulator-fixed";
			regulator-name = "WIFI_REG_ON";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};

		reg_can: 5v_iso {
			compatible = "regulator-fixed";
			regulator-name = "mcp25625_supply";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
		};

	};

        /* CFPX-180 quartz crystal */
	can_osc: can0_osc {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <20000000>;
	};

	sound-wm8904 {
		compatible = "fsl,imx-audio-wm8904";
		model = "imx-wm8904";
		audio-cpu = <&sai3>;
		audio-codec = <&wm8904>;
		audio-routing =
			"Headphone Jack", "HPOUTL",
			"Headphone Jack", "HPOUTR",
			"IN2L", "Line In Jack",
			"IN2R", "Line In Jack",
			"IN1L", "Mic Jack",
			"Playback", "CPU-Playback",
			"CPU-Capture", "Capture";
		status = "okay";
	};

	sound-hdmi {
		compatible = "fsl,imx8mq-evk-cdnhdmi",
				"fsl,imx-audio-cdnhdmi";
		model = "imx-audio-hdmi";
		audio-cpu = <&sai4>;
		protocol = <1>;
		hdmi-out;
		constraint-rate = <44100>,
				<88200>,
				<176400>,
				<32000>,
				<48000>,
				<96000>,
				<192000>;
		status = "disabled";
	};
/*
	fpga-region0 {
		compatible = "fpga-region";
		fpga-mgr = <&fpga_mgr_spi>;
		#address-cells = <0x1>;
		#size-cells = <0x1>;
	};
*/
	spi_fpga: spi-fpga {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_spifpga>;
		compatible = "spi-gpio";
		#address-cells = <1>;
                #size-cells = <0>;

		gpio-sck = <&gpio3 0 GPIO_ACTIVE_HIGH>;
		gpio-miso = <&gpio3 7 GPIO_ACTIVE_HIGH>;
		gpio-mosi = <&gpio3 6 GPIO_ACTIVE_HIGH>;
		cs-gpios = <&gpio3 1 GPIO_ACTIVE_HIGH>;
		num-chipselects = <1>;

		status = "okay";
		
                spi@0 {
			compatible = "spidev";
			reg = <0>;
			spi-max-frequency = <100000>;
		};

                /* FPGA Lattice MachXO3LF 
                fpga_mgr_spi: fpga-mgr@0 {
			compatible = "lattice,machxo2-slave-spi";
			reg = <0>;
			spi-max-frequency = <8000000>;
		};
                */
        };
};



&clk {
	assigned-clocks = <&clk IMX8MQ_AUDIO_PLL1>;
	assigned-clock-rates = <786432000>;
};



&iomuxc {
	pinctrl-names = "default";

	imx8m-enobu {

		pinctrl_fec1: fec1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC			0x3
				MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO		0x23
				MX8MQ_IOMUXC_ENET_TD3_ENET1_RGMII_TD3		0x1f
				MX8MQ_IOMUXC_ENET_TD2_ENET1_RGMII_TD2		0x1f
				MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1		0x1f
				MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0		0x1f
				MX8MQ_IOMUXC_ENET_RD3_ENET1_RGMII_RD3		0x91
				MX8MQ_IOMUXC_ENET_RD2_ENET1_RGMII_RD2		0x91
				MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1		0x91
				MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0		0x91
				MX8MQ_IOMUXC_ENET_TXC_ENET1_RGMII_TXC		0x1f
				MX8MQ_IOMUXC_ENET_RXC_ENET1_RGMII_RXC		0x91
				MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x91
				MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x1f
				MX8MQ_IOMUXC_SAI5_RXD3_GPIO3_IO24		0x57
			>;
		};

                /* internal to SOM */
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA			0x4000007f
			>;
		};

                /* all other devices */
		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA			0x4000007f
			>;
		};

                /* NOT used actually */
		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C3_SCL_I2C3_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C3_SDA_I2C3_SDA			0x4000007f
			>;
		};

                /* FPGA dedicated I2C */
		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C4_SCL_I2C4_SCL			0x4000007f
				MX8MQ_IOMUXC_I2C4_SDA_I2C4_SDA			0x4000007f
			>;
		};

                /* to CAN controller */
                pinctrl_ecspi2: ecspi2grp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_ECSPI2_MISO_ECSPI2_MISO 		0x13      
                                MX8MQ_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI 		0x13      
                                MX8MQ_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK 		0x13      
                                MX8MQ_IOMUXC_ECSPI2_SS0_GPIO5_IO13       	0x13    /* ESPI2_SS0      */   
                                MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12         	0x13    /* ESPI2_STBY_CAN */
                                MX8MQ_IOMUXC_SAI5_MCLK_GPIO3_IO25               0x13    /* SPI_INT        */
                    >;
                };

		pinctrl_hdmi: hdmigrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_TXD4_GPIO4_IO16		0xc1    /* HDMI_I2C_EN (?) */
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B 		0xc6
			>;
		};

                pinctrl_audiopw: audiopwgrp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_SAI5_RXD0_GPIO3_IO21               0x00000016  /* AUDIOPOW_WARN (?)  */
                                MX8MQ_IOMUXC_SAI5_RXD2_GPIO3_IO23               0x00000016  /* AUDIOPOW_FAULT (?) */
                                MX8MQ_IOMUXC_SAI5_RXC_GPIO3_IO20                0x00000016  /* AUDIOPOW_MUTE (?)  */
                                MX8MQ_IOMUXC_SAI5_RXD1_GPIO3_IO22               0x00001816  /* AUDIOPOW_STBY (?)  */
                        >;
                };

                pinctrl_fpga: fpgagrp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19             0x00000016  /* FPGA_INITN (?) */
                        >;
                };

                pinctrl_spifpga: spifpgagrp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_NAND_DATA01_GPIO3_IO7              0x4f  /* FPGA_SPI_O (?) */
                                MX8MQ_IOMUXC_NAND_DATA00_GPIO3_IO6              0x4f  /* FPGA_SPI_I (?) */
                                MX8MQ_IOMUXC_NAND_CE0_B_GPIO3_IO1               0x4f  /* FPGA_SPI_CS (?) */
                                MX8MQ_IOMUXC_NAND_ALE_GPIO3_IO0                 0x4f  /* FPGA_SPI_CLK (?) */
                        >;
                };

                /* Linux Console */
		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX		0x49
				MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX		0x49
			>;
		};

                /* Header */
		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART2_RXD_UART2_DCE_RX		0x49
				MX8MQ_IOMUXC_UART2_TXD_UART2_DCE_TX		0x49
                                MX8MQ_IOMUXC_UART4_RXD_UART2_DCE_CTS_B          0x49  /* (?) */
                                MX8MQ_IOMUXC_UART4_TXD_UART2_DCE_RTS_B          0x49  /* (?) */
			>;
		};

                /* Header */
		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART3_RXD_UART3_DCE_RX		0x49
				MX8MQ_IOMUXC_UART3_TXD_UART3_DCE_TX		0x49
                                MX8MQ_IOMUXC_ECSPI1_MISO_UART3_DCE_CTS_B        0x49
                                MX8MQ_IOMUXC_ECSPI1_SS0_UART3_DCE_RTS_B         0x49
			>;
		};

                /* eMMC */
		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x83
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc3
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc3
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc3
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc3
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc3
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc3
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc3
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc3
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc3
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x83
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x8d
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xcd
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xcd
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xcd
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xcd
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xcd
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xcd
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xcd
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xcd
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xcd
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x8d
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x9f
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xdf
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xdf
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xdf
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xdf
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xdf
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xdf
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xdf
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xdf
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xdf
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x9f
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
			>;
		};

                /* Wifi SDIO on eNOBU - shared between WiFi/uSD  */
		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x83
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc3
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc3
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc3
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc3
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc3
			>;
		};

		pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x8d
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xcd
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xcd
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xcd
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xcd
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xcd
			>;
		};

		pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x9f
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xdf
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xdf
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xdf
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xdf
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xdf
			>;
		};

                pinctrl_sai1: sai1grp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_SAI1_MCLK_SAI1_MCLK                0xd6
                                MX8MQ_IOMUXC_SAI1_TXC_SAI1_TX_BCLK              0xd6
                                MX8MQ_IOMUXC_SAI1_TXD0_SAI1_TX_DATA0            0xd6
                                MX8MQ_IOMUXC_SAI1_TXD1_SAI1_TX_DATA1            0xd6
                                MX8MQ_IOMUXC_SAI1_TXFS_SAI1_TX_SYNC             0xd6
                        >;
                };

                pinctrl_sai2: sai2grp {
                        fsl,pins = <
                                MX8MQ_IOMUXC_SAI2_MCLK_SAI2_MCLK                0xd6
                                MX8MQ_IOMUXC_SAI2_RXC_SAI2_RX_BCLK              0xd6
                                MX8MQ_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0            0xd6
                                MX8MQ_IOMUXC_SAI2_RXFS_SAI2_RX_SYNC             0xd6
                                MX8MQ_IOMUXC_SAI2_TXC_SAI2_TX_BCLK              0xd6
                                MX8MQ_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0            0xd6
                                MX8MQ_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC             0xd6
                        >;
                };

                /* WM8904 audio serial (on SOM) */
		pinctrl_sai3: sai3grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI3_RXFS_SAI3_RX_SYNC		0xd6
				MX8MQ_IOMUXC_SAI3_RXC_SAI3_RX_BCLK		0xd6
				MX8MQ_IOMUXC_SAI3_RXD_SAI3_RX_DATA0		0xd6
				MX8MQ_IOMUXC_SAI3_TXFS_SAI3_TX_SYNC		0xd6
				MX8MQ_IOMUXC_SAI3_TXC_SAI3_TX_BCLK		0xd6
				MX8MQ_IOMUXC_SAI3_TXD_SAI3_TX_DATA0		0xd6
				MX8MQ_IOMUXC_SAI3_MCLK_SAI3_MCLK		0xd6
			>;
		};

		pinctrl_wifi: wifigrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO04_GPIO1_IO4		0xc1	/* WIFI_PWR_VSEL */
				MX8MQ_IOMUXC_GPIO1_IO08_GPIO1_IO8		0xc1	/* WIFI_PWR_ON   */
				MX8MQ_IOMUXC_NAND_CE1_B_GPIO3_IO2		0xc1	/* WIFI_REG_ON   */
				MX8MQ_IOMUXC_GPIO1_IO00_ANAMIX_REF_CLK_32K	0xc1	/* WIFI_CLK_32K  */
				MX8MQ_IOMUXC_NAND_CE3_B_GPIO3_IO4		0xc1	/* BT_REG_ON     */
				MX8MQ_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5		0xc1	/* BT_BUF_EN     */
			>;
		};

                /* present but disabled by default */
		pinctrl_lvds: lvdsgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11		0x16
			>;
		};
	};
};



/* Set WIFI SDIO voltage at 1.8V */
&gpio1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hdmi>;

	hdmi_on_hog {
		gpio-hog;
		gpios = <5 0>;
		output-low;
		line-name = "hdmi_on";
	};

	wifi_vsel_hog {
		gpio-hog;
		gpios = <4 0>;
		output-high;
		line-name = "wifi_vsel";
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii";
        phy-handle = <&switch0>;
	phy-reset-gpios = <&gpio3 24 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <10>;
        status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

                switch0: switch0@18 {
        		compatible = "marvell,mv88e6085";
        		#address-cells = <1>;
        		#size-cells = <0>;
        		reg = <0x18>;
	                
        		dsa,member = <0x18 0>;
        
        		ports {
        			#address-cells = <1>;
        			#size-cells = <0>;
			        
                                port@0 {
			        	reg = <0>;
			        	label = "lan0";
        		        };

                                port@1 {
                                        reg = <1>;
                                        label = "lan1";
                                };
  
                                port@2 {
                                        reg = <2>;
                                        label = "lan2";
                                };
  
                                port@3 {
                                        reg = <3>;
                                        label = "lan3";
                                };
  
                                port@4 {
                                        reg = <4>;
                                        label = "lan4";
                                };
  
                                port@6 {
                                        reg = <6>;
                                        label = "cpu";
                                        ethernet = <&fec1>;
                                };
  
	                };
	        };
        };
};

/*
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii";
        phy-handle = <&switch0>;
	phy-reset-gpios = <&gpio3 24 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <10>;
        status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

                switch0: switch0@18 {
        		compatible = "marvell,mv88e6085";
        		#address-cells = <1>;
        		#size-cells = <0>;
        		reg = <0x18>;
	                
        		dsa,member = <0x18 0>;
        
        		ports {
        			#address-cells = <1>;
        			#size-cells = <0>;
			        
                                port@0 {
			        	reg = <0>;
			        	label = "lan0";
                               		phy-handle = <&switch0phy0>;
        		        };

                                port@1 {
                                        reg = <1>;
                                        label = "lan1";
                               		phy-handle = <&switch0phy1>;
                                };
  
                                port@2 {
                                        reg = <2>;
                                        label = "lan2";
                               		phy-handle = <&switch0phy2>;
                                };
  
                                port@3 {
                                        reg = <3>;
                                        label = "lan3";
                               		phy-handle = <&switch0phy3>;
                                };
  
                                port@4 {
                                        reg = <4>;
                                        label = "lan4";
                               		phy-handle = <&switch0phy4>;
                                };
  
                                port@6 {
                                        reg = <6>;
                                        label = "cpu";
                                        ethernet = <&fec1>;
                                };
  
	                };

                        mdio {
                                #address-cells = <1>;
				#size-cells = <0>;

				switch0phy0: switch0phy0@0 {
					reg = <0>;
                                        interrupt-parent = <&switch0>;
                                };
				switch0phy1: switch0phy1@0 {
					reg = <1>;
                                        interrupt-parent = <&switch0>;
                                };
				switch0phy2: switch0phy2@0 {
					reg = <2>;
                                        interrupt-parent = <&switch0>;
                                };
				switch0phy3: switch0phy3@0 {
					reg = <3>;
                                        interrupt-parent = <&switch0>;
                                };
				switch0phy4: switch0phy4@0 {
					reg = <4>;
                                        interrupt-parent = <&switch0>;
                                };
				switch0phy6: switch0phy6@0 {
					reg = <6>;
                                        interrupt-parent = <&switch0>;
                                };
                        };
	        };
        };
};
*/



&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			sw3a_reg: sw3ab {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};

	wm8904: codec@1a {
		compatible = "wlf,wm8904";
		reg = <0x1a>;
		clocks = <&clk IMX8MQ_CLK_SAI3_ROOT>;
		clock-names = "mclk";
		DCVDD-supply = <&reg_audio>;
		DBVDD-supply = <&reg_audio>;
		AVDD-supply = <&reg_audio>;
		CPVDD-supply = <&reg_audio>;
		MICVDD-supply = <&reg_audio>;
		gpio-cfg = <
			0x0018 /* GPIO1 => DMIC_CLK */
			0xffff /* GPIO2 => don't touch */
			0xffff /* GPIO3 => don't touch */
			0xffff /* GPIO4 => don't touch */
		>;
		status = "okay";
	};

	dsi_lvds_bridge: sn65dsi84@2c {
		compatible = "ti,sn65dsi83";
		reg = <0x2c>;
		ti,dsi-lanes = <4>;
		ti,lvds-format = <1>;
		ti,lvds-bpp = <24>;
		ti,width-mm = <154>;
		ti,height-mm = <87>;
		enable-gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_lvds>;
		status = "disabled";
	};

	reg_cpu_dvfs: tps62361@60 {
		reg = <0x60>;
		compatible = "ti,tps62362";
		regulator-min-microvolt = <900000>;
		regulator-max-microvolt = <1000000>;
		regulator-name = "arm-supply";
		regulator-boot-on;
		regulator-always-on;
		ti,enable-force-pwm;
                status = "disabled";
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

        /* IIS2DH  accelerometro */
        accel: iis2dh@18 {
  		compatible = "st,iis2dh_accel";
  		reg = <0x18>;

                /* TODO 
                 * per ora gli irq passano da FPGA,
                 * valutare se farseli arrivare direttamente al
                 * micro.
                 *
                 * interrupt-parent = <&gpio1>;
  		 * interrupts = <26 IRQ_TYPE_LEVEL_HIGH>, 
                 *              <27 IRQ_TYPE_LEVEL_HIGH>;
                 */
        };

        /* RTC8564 real time clock */
	pcf8564@51 {
		compatible = "nxp,pcf8563";
		reg = <0x51>;
	};

        /* M24512 eeprom */
        eeprom@57 {
		compatible = "atmel,24c512";
		reg = <0x57>;
	};

        /* TAS6424 power codec */
        tas6424: tas6424@6a {
	        compatible = "ti,tas6424";
	        reg = <0x6a>;

	        #sound-dai-cells = <0>;

                /* TODO 
                 * prendere dalla versione successiva di kernel gli agganci
                 * per definire e gestire i seguenti GPIO.
                 *
                 * standby-gpios = <&gpio3 22 GPIO_ACTIVE_HIGH>;
                 * mute-gpios = <&gpio3 20 GPIO_ACTIVE_HIGH>;
                 */

                pinctrl-names = "default";
	        pinctrl-0 = <&pinctrl_audiopw>;
                interrupts-extended = <&gpio3 21 IRQ_TYPE_EDGE_FALLING>,
                                      <&gpio3 23 IRQ_TYPE_EDGE_FALLING>;
        };

        /* USB5744T  usb hub */
        usb3_hub: usb5744@2d {
		compatible = "microchip,usb5744";
		reg = <0x2d>;

		/* TODO 
                 * nel caso facessimo passare i GPIO da fpga a uP,
                 * agganciare la funzione del segnale di reset.
                 *
                 * pinctrl-names = "default";
		 * pinctrl-0 = <&pinctrl_usb5744>;
		 * reset-gpios = <&gpio4 1 GPIO_ACTIVE_LOW>;
                 */
	};

        /* TODO popolare con
         *
         * - TPS2388   poe pse controller
         */
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
};

/* FPGA */
&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";

        /* TODO popolare con

           - PI7C9X2G404  pcie hub
           - LCMXO3       fpga (backup) 
           
        */
};

&ecspi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	cs-gpios = <&gpio5  13 GPIO_ACTIVE_HIGH>;
	fsl,spi-num-chipselects = <1>;
	status = "okay";

        /* MPC25625  External CAN controller */
	can0: can@0 {
		compatible = "microchip,mcp25625";
		reg = <0>;
		clocks = <&can_osc>;
		interrupt-parent = <&gpio3>;
		interrupts = <25 0x2>;
                spi-max-frequency = <20000000>;
		vdd-supply = <&reg_can>;
		xceiver-supply = <&reg_can>;
	        status = "okay";
	};

};

/* PCIe Switch x4 ports */
&pcie0 {
	ext_osc = <1>;
	status = "disabled";
};

/* M.2 Module 1 */
&pcie1 {
	ext_osc = <1>;
	status = "disabled";
};

/* Console */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Header */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Header */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Bluetooth */
/* &uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MQ_SYS1_PLL_80M>;
	fsl,uart-has-rtscts;
	status = "disabled";
}; */

/* eMMC */
&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

/* Wifi */
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_wifi>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_wifi>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_wifi>;
	bus-width = <4>;
	vmmc-supply = <&reg_wifi_en>;
	status = "okay";
};

/* USBOTG */
&usb3_phy0 {
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	status = "okay";
	dr_mode = "host";
};

/* USBUP to hub USB5744T */
&usb3_phy1 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	status = "okay";
	dr_mode = "host";
};

/* TAS6424 power codec */
&sai1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai1>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI1>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <1536000>;
	status = "okay";
};

/* LCMXO FPGA aux audio channel */
&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI2>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <1536000>;
	status = "okay";
};

/* WM8904 audio */
&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <1536000>;
	status = "okay";
};

/* HDMI audio out */
&sai4 {
	assigned-clocks = <&clk IMX8MQ_CLK_SAI4>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	status = "disabled";
};

&gpu_pd {
	power-supply = <&sw1a_reg>;
};

&vpu_pd {
	power-supply = <&sw1c_reg>;
};

&gpu {
	status = "okay";
};

&vpu {
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&mu {
	status = "okay";
};

&resmem {
	/* cma region is provided by kernel command line as cma=<size>MB */
	/delete-node/ linux,cma;
};

&rpmsg{
	/*
	 * 64K for one rpmsg instance:
	 * --0xb8000000~0xb800ffff: pingpong
	 */
	vdev-nums = <1>;
	reg = <0x0 0xb8000000 0x0 0x10000>;
	status = "okay";
};

&A53_0 {
	operating-points = <
		/* kHz    uV */
		1500000 1000000
		1300000 1000000
		1000000 900000
		800000  900000
	>;
	dc-supply = <&reg_cpu_dvfs>;
};

&snvs_rtc {
	status = "disabled";
};

