// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/*
 * Copyright 2017 NXP
 * Copyright 2018-2020 Variscite Ltd.
 * Copyright 2019 Leonardo S.p.A.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

#include <dt-bindings/usb/pd.h>
#include "imx8mq.dtsi"

/ {
	model = "Leonardo eNOBU WIFI+HDMI";
	compatible = "leonardo,imx8mq-enobu", "fsl,imx8mq";

        aliases {
		spi3 = &spi_fpga;
        };

	chosen {
		bootargs = "console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200";
		stdout-path = &uart1;
	};

	pcie0_refclk: pcie0-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	pcie1_refclk: pcie1-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	reg_audio: audio_vdd {
		compatible = "regulator-fixed";
		regulator-name = "wm8904_supply";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	reg_audiopwr: audiopwr_12v {
		compatible = "regulator-fixed";
		regulator-name = "audiopwr_supply";
		regulator-min-microvolt = <12000000>;
		regulator-max-microvolt = <12000000>;
		regulator-always-on;
	};

/*	reg_wifi_en: wifi_en {
		compatible = "regulator-fixed";
		regulator-name = "WIFI_REG_ON";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	}; */

	reg_can: 5v_iso {
		compatible = "regulator-fixed";
		regulator-name = "mcp25625_supply";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

/*	reg_usb_otg1_vbus: vbus_otg {
		compatible = "regulator-fixed";
		regulator-name = "usb_otg1_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio1 12 GPIO_ACTIVE_HIGH>;
	        enable-active-high;
		regulator-always-on;
	}; */

	/* CFPX-180 quartz crystal */
	can0_osc: can0_osc {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <20000000>;
	};

	sound-tas6424 {
		compatible = "fsl,imx-audio-tas6424";
		model = "imx-tas6424";
		audio-cpu = <&sai1>;
		audio-codec = <&tas6424>;
		audio-routing =
			"Line Out Jack", "OUT",
			"Playback", "CPU-Playback";
		status = "okay";
	};

        modem_codec: enobu-fpga-auxaudio@0 {
                compatible = "leonardo,enobu-fpga-auxaudio";
                #sound-dai-cells = <0>;
        };

        sound-auxfpga {
                compatible = "simple-audio-card";
                simple-audio-card,name = "fpga-audio";
                simple-audio-card,format = "dsp_a";
                simple-audio-card,bitclock-master = <&cpu_dai>;
                simple-audio-card,frame-master = <&cpu_dai>;
                simple-audio-card,bitclock-inversion;
		status = "okay";
                
                cpu_dai: simple-audio-card,cpu {
                    sound-dai = <&sai2>;
                };
                
                codec_dai: simple-audio-card,codec {
                    sound-dai = <&modem_codec>;
                };
        };

	sound-wm8904 {
		compatible = "fsl,imx-audio-wm8904";
		model = "imx-wm8904";
		audio-cpu = <&sai3>;
		audio-codec = <&wm8904>;
		audio-routing =
			"Headphone Jack", "HPOUTL",
			"Headphone Jack", "HPOUTR",
			"IN2L", "Line In Jack",
			"IN2R", "Line In Jack",
			"Playback", "CPU-Playback",
			"CPU-Capture", "Capture";
		status = "okay";
	};

	sound-hdmi {
		compatible = "fsl,imx8mq-evk-cdnhdmi",
				"fsl,imx-audio-cdnhdmi";
		model = "imx-audio-hdmi";
		audio-cpu = <&sai4>;
		protocol = <1>;
		hdmi-out;
		constraint-rate = <44100>,
				<88200>,
				<176400>,
				<32000>,
				<48000>,
				<96000>,
				<192000>;
		status = "disabled";
	};

	sound-hdmi-arc {
		compatible = "fsl,imx-audio-spdif";
		model = "imx-hdmi-arc";
		spdif-controller = <&spdif2>;
		spdif-in;
		status = "disabled";
	};

	spi_fpga: spi-fpga {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_spifpga>;
		compatible = "spi-gpio";
		#address-cells = <1>;
                #size-cells = <0>;

		gpio-sck = <&gpio3 0 GPIO_ACTIVE_HIGH>;
		gpio-miso = <&gpio3 7 GPIO_ACTIVE_HIGH>;
		gpio-mosi = <&gpio3 6 GPIO_ACTIVE_HIGH>;
		cs-gpios = <&gpio3 1 GPIO_ACTIVE_HIGH>;
		num-chipselects = <1>;
		status = "okay";
		
               /* FPGA Lattice MachXO3LF 
               fpga_mgr: fpga-mgr@0 {
			compatible = "lattice,machxo2-slave-spi";
			reg = <0>;
			spi-max-frequency = <100000>;
                        status = "okay";
		}; */
                
                /* debug SPI toward FPGA */
                spi@0 {
			compatible = "var,spidev";
			reg = <0>;
			spi-max-frequency = <100000>;
		};
        };

/*        fpga-region0 {
        	compatible = "fpga-region";
        	fpga-mgr = <&fpga_mgr>;
        }; */
};

&A53_0 {
	cpu-supply = <&reg_cpu_dvfs>;
};

&A53_1 {
	cpu-supply = <&reg_cpu_dvfs>;
};

&A53_2 {
	cpu-supply = <&reg_cpu_dvfs>;
};

&A53_3 {
	cpu-supply = <&reg_cpu_dvfs>;
};

/* KERNEL CRASH!!!!
&clk {
	assigned-clocks = <&clk IMX8MQ_AUDIO_PLL1>;
	assigned-clock-rates = <786432000>;
};
*/
&iomuxc {
	pinctrl-names = "default";

	pinctrl_fec1: fec1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC			0x3
			MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO		0x23
			MX8MQ_IOMUXC_ENET_TD3_ENET1_RGMII_TD3		0x1f
			MX8MQ_IOMUXC_ENET_TD2_ENET1_RGMII_TD2		0x1f
			MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1		0x1f
			MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0		0x1f
			MX8MQ_IOMUXC_ENET_RD3_ENET1_RGMII_RD3		0x91
			MX8MQ_IOMUXC_ENET_RD2_ENET1_RGMII_RD2		0x91
			MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1		0x91
			MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0		0x91
			MX8MQ_IOMUXC_ENET_TXC_ENET1_RGMII_TXC		0x1f
			MX8MQ_IOMUXC_ENET_RXC_ENET1_RGMII_RXC		0x91
			MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x91
			MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x1f
			MX8MQ_IOMUXC_SAI5_RXD3_GPIO3_IO24		0x47
                        MX8MQ_IOMUXC_GPIO1_IO03_GPIO1_IO3               0xc1
                        MX8MQ_IOMUXC_GPIO1_IO05_GPIO1_IO5               0xc1
		>;
	};

        /* internal to SOM */
	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA			0x4000007f
		>;
	};

        /* all others devices */
	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL			0x40000067
			MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA			0x40000067
		>;
	};

        /* NOT used actually */
	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C3_SCL_I2C3_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C3_SDA_I2C3_SDA			0x4000007f
		>;
	};

        /* FPGA dedicated I2C */
	pinctrl_i2c4: i2c4grp {
		fsl,pins = <
			MX8MQ_IOMUXC_I2C4_SCL_I2C4_SCL			0x4000007f
			MX8MQ_IOMUXC_I2C4_SDA_I2C4_SDA			0x4000007f
		>;
	};

	/* to CAN controller */
	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_ECSPI2_MISO_ECSPI2_MISO 		0x13
			MX8MQ_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI 		0x13
			MX8MQ_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK 		0x13
			MX8MQ_IOMUXC_ECSPI2_SS0_GPIO5_IO13		0x13    /* CS           */
			MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12		0x13    /* ESPI2_STBY_CAN (not needed, STDY signal may be put to gnd */
			MX8MQ_IOMUXC_SAI5_MCLK_GPIO3_IO25		0x13    /* SPI_INT        */
		>;
	};

        pinctrl_hdmi: hdmigrp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI1_TXD4_GPIO4_IO16		0xc1    /* HDMI_I2C_EN */
		>;
        };

        pinctrl_audiopw: audiopwgrp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI5_RXD0_GPIO3_IO21               0x56  /* AUDIOPOW_WARN  (?)  */
                        MX8MQ_IOMUXC_SAI5_RXD2_GPIO3_IO23               0x56  /* AUDIOPOW_FAULT (?)  */
                        MX8MQ_IOMUXC_SAI5_RXC_GPIO3_IO20                0x56  /* AUDIOPOW_MUTE  (?)  */
                        MX8MQ_IOMUXC_SAI5_RXD1_GPIO3_IO22               0x56  /* AUDIOPOW_STBY  (?)  */
                >;
        };

        pinctrl_fpga: fpgagrp {
                fsl,pins = <
                        MX8MQ_IOMUXC_GPIO1_IO01_GPIO1_IO1               0xc7  /* FPGA_PROGRAMN       */
                        MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19             0xc7  /* FPGA_INITN (???)    */
                        MX8MQ_IOMUXC_GPIO1_IO15_GPIO1_IO15              0xc1  /* FPGA_DONE           */
                        MX8MQ_IOMUXC_GPIO1_IO11_GPIO1_IO11              0xc1  /* FPGA_IRQ (oppure)   */
                >;
        };

        pinctrl_spifpga: spifpgagrp {
                fsl,pins = <
                        MX8MQ_IOMUXC_NAND_DATA01_GPIO3_IO7              0x4f  /* FPGA_SPI_O (?) */
                        MX8MQ_IOMUXC_NAND_DATA00_GPIO3_IO6              0x4f  /* FPGA_SPI_I (?) */
                        MX8MQ_IOMUXC_NAND_CE0_B_GPIO3_IO1               0x4f  /* FPGA_SPI_CS (?) */
                        MX8MQ_IOMUXC_NAND_ALE_GPIO3_IO0                 0x4f  /* FPGA_SPI_CLK (?) */
                >;
        };

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX		0x49
			MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX		0x49
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART2_RXD_UART2_DCE_RX		0x49
			MX8MQ_IOMUXC_UART2_TXD_UART2_DCE_TX		0x49
                        MX8MQ_IOMUXC_UART4_RXD_UART2_DCE_CTS_B	        0x49  /* (?) */
                        MX8MQ_IOMUXC_UART4_TXD_UART2_DCE_RTS_B	        0x49  /* (?) */
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MQ_IOMUXC_UART3_RXD_UART3_DCE_RX		0x49
			MX8MQ_IOMUXC_UART3_TXD_UART3_DCE_TX		0x49
                        MX8MQ_IOMUXC_ECSPI1_MISO_UART3_DCE_CTS_B	0x49
                        MX8MQ_IOMUXC_ECSPI1_SS0_UART3_DCE_RTS_B		0x49
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MQ_IOMUXC_ECSPI2_SCLK_UART4_DCE_RX		0xc1
			MX8MQ_IOMUXC_ECSPI2_MOSI_UART4_DCE_TX		0xc1
			MX8MQ_IOMUXC_ECSPI2_MISO_UART4_DCE_CTS_B	0xc1
			MX8MQ_IOMUXC_ECSPI2_SS0_UART4_DCE_RTS_B		0xc1
		>;
	};

        /* eMMC */
	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x83
			MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xc3
			MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xc3
			MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xc3
			MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xc3
			MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xc3
			MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xc3
			MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xc3
			MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xc3
			MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xc3
			MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x83
			MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1-100grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x8d
			MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xcd
			MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xcd
			MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xcd
			MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xcd
			MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xcd
			MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xcd
			MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xcd
			MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xcd
			MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xcd
			MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x8d
			MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1-200grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK			0x9f
			MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD			0xdf
			MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0		0xdf
			MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1		0xdf
			MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2		0xdf
			MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3		0xdf
			MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4		0xdf
			MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5		0xdf
			MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6		0xdf
			MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7		0xdf
			MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE		0x9f
			MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B		0xc1
		>;
	};

        /* Wifi SDIO on eNOBU - shared between WiFi/uSD  */
	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x83
			MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc3
			MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc3
			MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc3
			MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc3
			MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc3
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2-100grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x85
			MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc5
			MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc5
			MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc5
			MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc5
			MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc5
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2-200grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK			0x87
			MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD			0xc7
			MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0		0xc7
			MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1		0xc7
			MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2		0xc7
			MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3		0xc7
		>;
	};

        /* TAS6424 power codec */
        pinctrl_sai1: sai1grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI1_MCLK_SAI1_MCLK                0xd6
                        MX8MQ_IOMUXC_SAI1_TXC_SAI1_TX_BCLK              0xd6
                        MX8MQ_IOMUXC_SAI1_TXD0_SAI1_TX_DATA0            0xd6
                        MX8MQ_IOMUXC_SAI1_TXD1_SAI1_TX_DATA1            0xd6
                        MX8MQ_IOMUXC_SAI1_TXFS_SAI1_TX_SYNC             0xd6
                >;
        };

        /* LCMXO FPGA aux audio channel */
        pinctrl_sai2: sai2grp {
                fsl,pins = <
                        MX8MQ_IOMUXC_SAI2_MCLK_SAI2_MCLK                0xd6
                        MX8MQ_IOMUXC_SAI2_RXC_SAI2_RX_BCLK              0xd6
                        MX8MQ_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0            0xd6
                        MX8MQ_IOMUXC_SAI2_RXFS_SAI2_RX_SYNC             0xd6
                        MX8MQ_IOMUXC_SAI2_TXC_SAI2_TX_BCLK              0xd6
                        MX8MQ_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0            0xd6
                        MX8MQ_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC             0xd6
                >;
        };

        /* WM8904 audio serial (on SOM) */
	pinctrl_sai3: sai3grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI3_RXFS_SAI3_RX_SYNC		0xd6
			MX8MQ_IOMUXC_SAI3_RXC_SAI3_RX_BCLK		0xd6
			MX8MQ_IOMUXC_SAI3_RXD_SAI3_RX_DATA0		0xd6
			MX8MQ_IOMUXC_SAI3_TXFS_SAI3_TX_SYNC		0xd6
			MX8MQ_IOMUXC_SAI3_TXC_SAI3_TX_BCLK		0xd6
			MX8MQ_IOMUXC_SAI3_TXD_SAI3_TX_DATA0		0xd6
			MX8MQ_IOMUXC_SAI3_MCLK_SAI3_MCLK		0xd6
		>;
	};

	pinctrl_wdog: wdog1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B		0xc6
		>;
	};

	pinctrl_wifi: wifigrp {
		fsl,pins = <
			MX8MQ_IOMUXC_GPIO1_IO04_GPIO1_IO4		0xc1	/* WIFI_PWR_VSEL */
			MX8MQ_IOMUXC_GPIO1_IO08_GPIO1_IO8		0xc1	/* WIFI_PWR_ON   */
			MX8MQ_IOMUXC_NAND_CE1_B_GPIO3_IO2		0xc1	/* WIFI_REG_ON   */
			MX8MQ_IOMUXC_GPIO1_IO00_ANAMIX_REF_CLK_32K	0xc1	/* WIFI_CLK_32K  */
		>;
	};

	pinctrl_bt: btgrp {
		fsl,pins = <
			MX8MQ_IOMUXC_NAND_CE3_B_GPIO3_IO4		0xc1	/* BT_REG_ON     */
			MX8MQ_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5		0xc1	/* BT_BUF_EN     */
		>;
	};

	pinctrl_pcie0: pcie0grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI1_RXD5_GPIO4_IO7		0x16
		>;
	};

	pinctrl_pcie1: pcie1grp {
		fsl,pins = <
			MX8MQ_IOMUXC_SAI1_TXD7_GPIO4_IO19		0x16
		>;
	};

};

/* Set WIFI SDIO voltage at 1.8V */
&gpio1 {
	wifi_vsel_hog {
		gpio-hog;
		gpios = <4 0>;
		output-high;
		line-name = "wifi_vsel";
	};
};

&gpio4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hdmi>;

	hdmi_on_hog {
		gpio-hog;
		gpios = <16 0>;
		output-high;
		line-name = "hdmi_on";
	};
};

/* Marvell switch linux-managed */
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii";
//        phy-handle = <&switch0uplink>;
	phy-reset-gpios = <&gpio3 24 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <30>;
        status = "okay";

        fixed-link {
                speed = <1000>;
                full-duplex;
        };

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;
                // interrupt-controller;
                // #interrupt-cells = <2>;

                switch0: switch0@0 {
        		compatible = "marvell,mv88e6085";
        		// #address-cells = <1>;
        		// #size-cells = <0>;

        		reg = <0x18>;
        		dsa,member = <0 0>;

			// interrupt-parent = <&gpio1>;
			// interrupts = <3 IRQ_TYPE_EDGE_FALLING>;
 
        		ports {
        			#address-cells = <1>;
        			#size-cells = <0>;
			        
                                switch0uplink: port@6 {
                                        reg = <6>;
	                                phy-mode = "rgmii";
                                        // label = "cpu";

                                        ethernet = <&fec1>;
                                        fixed-link {
                                                speed = <1000>;
                                                full-duplex;
                                        };
                                };
  
                                port@4 {
                                        reg = <4>;
                                        label = "lan1";
                                };
  
                                port@2 {
                                        reg = <2>;
                                        label = "lan2";
                                };
  
                                port@3 {
                                        reg = <3>;
                                        label = "lan3";
                                };
  
                                port@0 {
			        	reg = <0>;
			        	label = "lan5";
        		        };

                                port@1 {
                                        reg = <1>;
                                        label = "lan6";
                                };

                                switch0downlink: port@5 {
                                        reg = <5>;
                                        phy-mode = "1000base-x";

                                        // label = "dsa";

                                        link = <&switch1uplink>;

				        fixed-link {
					        speed = <1000>;
					        full-duplex;
				        };
                                };
	                };
                };

                switch1: switch1@0 {
        		compatible = "marvell,mv88e6085";
        		// #address-cells = <1>;
        		// #size-cells = <0>;

        		reg = <0x1e>;
        		dsa,member = <0 1>;

			// interrupt-parent = <&gpio1>;
			// interrupts = <5 IRQ_TYPE_EDGE_FALLING>;

			/* Disabilitato per scheda di laboratorio che ha il secondo switch rotto
			status = "disabled"; */
 
        		ports {
        			#address-cells = <1>;
        			#size-cells = <0>;
			        
                                port@0 {
			        	reg = <0>;
			        	label = "lan4";
        		        };

                                port@1 {
                                        reg = <1>;
                                        label = "lan7";
                                };
  
                                port@2 {
                                        reg = <2>;
                                        label = "lan8";
                                };
  
                                port@3 {
                                        reg = <3>;
                                        label = "lan9";
                                };
  
                                port@4 {
                                        reg = <4>;
                                        label = "lan10";
                                };
  
                                switch1uplink: port@5 {
                                        reg = <5>;
                                        phy-mode = "1000base-x";

                                        // label = "dsa";

                                        link = <&switch0downlink>;

                                        fixed-link {
					        speed = <1000>;
					        full-duplex;
                                        };
				};
	                };
                };
        };
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic@8 {
		compatible = "fsl,pfuze100";
		fsl,pfuze-support-disable-sw;
		reg = <0x8>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <950000>;
				regulator-max-microvolt = <1100000>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <825000>;
				regulator-max-microvolt = <1100000>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <1100000>;
				regulator-max-microvolt = <1100000>;
				regulator-always-on;
			};

			sw3a_reg: sw3ab {
				regulator-min-microvolt = <825000>;
				regulator-max-microvolt = <1100000>;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <850000>;
				regulator-max-microvolt = <975000>;
				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1675000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1625000>;
				regulator-max-microvolt = <1875000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <3075000>;
				regulator-max-microvolt = <3625000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};

	wm8904: codec@1a {
		compatible = "wlf,wm8904";
		reg = <0x1a>;
		clocks = <&clk IMX8MQ_CLK_SAI3_ROOT>;
		clock-names = "mclk";
		DCVDD-supply = <&reg_audio>;
		DBVDD-supply = <&reg_audio>;
		AVDD-supply = <&reg_audio>;
		CPVDD-supply = <&reg_audio>;
		MICVDD-supply = <&reg_audio>;
		gpio-cfg = <
			0x0018 /* GPIO1 => DMIC_CLK */
			0xffff /* GPIO2 => don't touch */
			0xffff /* GPIO3 => don't touch */
			0xffff /* GPIO4 => don't touch */
		>;
		status = "okay";
	};

	reg_cpu_dvfs: tps62361@60 {
		reg = <0x60>;
		compatible = "ti,tps62361";
		regulator-min-microvolt = <900000>;
		regulator-max-microvolt = <1000000>;
		regulator-name = "arm-supply";
		regulator-boot-on;
		regulator-always-on;
		ti,enable-force-pwm;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	/* IIS2DH accelerometro */
	accel: iis2dh@18 {
	compatible = "st,iis2dh_accel";
	reg = <0x18>;

	/* TODO
	 * per ora gli irq passano da FPGA,
	 * valutare se farseli arrivare direttamente al
	 * micro.
	 *
	 * interrupt-parent = <&gpio1>;
	 * interrupts = <26 IRQ_TYPE_LEVEL_HIGH>,
	 *              <27 IRQ_TYPE_LEVEL_HIGH>;
	 */
	};

	/* TPS2388 poe PSE controller (8 ports) */
	tps2388@20 {
		compatible = "ti,tps2388";
		reg = <0x20>;
		ieee_enable = <1>;

		/* Each port <0..3> has:
			op_mode: off, manual, auto
			det_class_en: 0, 1
		 */
		port@0 {
			id = <0>;
			op_mode = "auto";
			led_pos = <5>;
			det_class_en = <1>;
		};
		port@1 {
			id = <1>;
			op_mode = "auto";
			led_pos = <2>;
			det_class_en = <1>;
		};
		port@2 {
			id = <2>;
			op_mode = "auto";
			led_pos = <3>;
			det_class_en = <1>;
		};
		port@3 {
			id = <3>;
			op_mode = "auto";
			led_pos = <1>;
			det_class_en = <1>;
		};
	};

	tps2388@21 {
		compatible = "ti,tps2388";
		reg = <0x21>;
		ieee_enable = <1>;
		//status = "disabled";

		port@0 {
			id = <0>;
			op_mode = "auto";
			led_pos = <4>;
			det_class_en = <1>;
		};
		port@1 {
			id = <1>;
			op_mode = "auto";
			led_pos = <6>;
			det_class_en = <1>;
		};
		port@2 {
			id = <2>;
			op_mode = "auto";
			led_pos = <7>;
			det_class_en = <1>;
		};
		port@3 {
			id = <3>;
			op_mode = "auto";
			led_pos = <8>;
			det_class_en = <1>;
		};
	};

        /* RTC8564 real time clock */
	pcf8564@51 {
		compatible = "nxp,pcf8563";
		reg = <0x51>;
	};

        /* M24512 eeprom */
	eeprom@57 {
		compatible = "atmel,24c512";
		reg = <0x57>;
	};

        /* TAS6424 power codec */
	tas6424: tas6424@6a {
		compatible = "ti,tas6424";
		reg = <0x6a>;

		clocks = <&clk IMX8MQ_CLK_SAI1_ROOT>;
		clock-names = "mclk";

		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_audiopw>;

		pvdd-supply = <&reg_audiopwr>;
		vbat-supply = <&reg_audiopwr>;
		dvdd-supply = <&reg_audio>;

		#sound-dai-cells = <0>;

		/* TODO
		 * prendere dalla versione successiva di kernel gli agganci
		 * per definire e gestire i seguenti GPIO.
		 *
		 * standby-gpios = <&gpio3 22 GPIO_ACTIVE_HIGH>;
		 * mute-gpios = <&gpio3 20 GPIO_ACTIVE_HIGH>;
		 */

		standby-gpios = <&gpio3 20 GPIO_ACTIVE_LOW>;   /* sono invertiti sulla schematica */
		mute-gpios = <&gpio3 22 GPIO_ACTIVE_LOW>;      /* sono invertiti sulla schematica */

		interrupts = <&gpio3 21 IRQ_TYPE_EDGE_FALLING>,
					 <&gpio3 23 IRQ_TYPE_EDGE_FALLING>;
	};

        /* USB5744T  usb hub */
        usb3_hub: usb5744@2d {
		compatible = "microchip,usb5744";
		reg = <0x2d>;

		reset-gpio = <&gpioreg 0x2 6 GPIO_ACTIVE_LOW>;
		vbus-gpio = <&gpioreg 0x2 7 GPIO_ACTIVE_LOW>;
	};

	/* DS1337 RTC module
	rtc@68 {
		status = "okay";
		compatible = "dallas,ds1337";
		reg = <0x68>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_rtc>;
		interrupt-parent = <&gpio1>;
		interrupts = <15 IRQ_TYPE_EDGE_FALLING>;
		wakeup-source;
	}; */
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";
        
        /* PI7C9X2G404 pcie hub */
        pcie_sw: pi7c9x2g404@6f {
		compatible = "pericom,pi7c9x2g404";
		reg = <0x6f>;
                reset-gpio = <&gpioreg 0x16 0 GPIO_ACTIVE_LOW>;
        };

        /* LCMXO3 fpga */ 
        enobu_fpga: enobu-fpga@32 {
   	        pinctrl-names = "default";
   	        pinctrl-0 = <&pinctrl_fpga>;
                compatible = "leonardo,enobu-fpga";
   	        reg = <0x32>;

   	        interrupt-parent = <&gpio1>;
   	        interrupts = <11 IRQ_TYPE_EDGE_FALLING>; 
   	     
                ledmatrix: ledmatrix@0 {
                        compatible = "leonardo,enobu-fpga-ledmatrix";
                };
                
                leds: leds@0 {
                        compatible = "leonardo,enobu-fpga-leds";
                };
                
                gpioreg: gpioreg@0 {
                        compatible = "leonardo,enobu-fpga-gpioreg";
                        gpio-controller;
                        #gpio-cells = <3>;
                };
        };

};

&ecspi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
	fsl,spi-num-chipselects = <1>;
	status = "okay";

	/* MPC25625 external CAN controller */
	can0: can@0 {
		compatible = "microchip,mcp25625";
		reg = <0>;
		clocks = <&can0_osc>;
		interrupt-parent = <&gpio3>;
		interrupts = <25 0x2>;
		spi-max-frequency = <5000000>;
		vdd-supply = <&reg_can>;
		xceiver-supply = <&reg_can>;
		status = "okay";
	};
};

&pcie0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie0>;
	reset-gpio = <&gpio4 7 GPIO_ACTIVE_LOW>;
	clocks = <&clk IMX8MQ_CLK_PCIE1_ROOT>,
		 <&clk IMX8MQ_CLK_PCIE1_AUX>,
		 <&clk IMX8MQ_CLK_PCIE1_PHY>,
		 <&pcie0_refclk>;
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	hard-wired = <1>;
	status = "okay";
};

&pcie1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie1>;
	reset-gpio = <&gpio4 19 GPIO_ACTIVE_LOW>;
	clocks = <&clk IMX8MQ_CLK_PCIE2_ROOT>,
		 <&clk IMX8MQ_CLK_PCIE2_AUX>,
		 <&clk IMX8MQ_CLK_PCIE2_PHY>,
		 <&pcie1_refclk>;
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	status = "okay";
};

/* Console */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Header */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Header */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	status = "okay";
};

/* Bluetooth */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>, <&pinctrl_bt>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MQ_SYS1_PLL_80M>;
	fsl,uart-has-rtscts;
	status = "disabled";
};

/* eMMC */
&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	vqmmc-supply = <&sw4_reg>;
	bus-width = <8>;
	non-removable;
	no-sd;
	no-sdio;
	status = "okay";
};

/* WIFI */
&usdhc2 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_wifi>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_wifi>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_wifi>;
	bus-width = <4>;
	non-removable;
	keep-power-in-suspend;
	status = "okay";

	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
	};
};

&usb3_phy0 {
	status = "okay";
};

&usb_dwc3_0 {
	dr_mode = "otg";
	hnp-disable;
	srp-disable;
	adp-disable;
	snps,dis-u1-entry-quirk;
	snps,dis-u2-entry-quirk;
	status = "okay";
};

&usb3_phy1 {
	status = "okay";
};

&usb_dwc3_1 {
	dr_mode = "host";
	status = "okay";
};

&hdmi {
	compatible = "cdn,imx8mq-hdmi";
	lane-mapping = <0xe4>;
	status = "okay";
};

/* TAS6424 power codec */
&sai1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai1>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI1>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	status = "okay";
};

/* LCMXO FPGA aux audio channel */
&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
        #sound-dai-cells = <0>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI2>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <1536000>;
	status = "okay";
};

/* WM8904 audio */
&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <1536000>;
	status = "okay";
};

/* HDMI audio out */
&sai4 {
	clocks = <&clk IMX8MQ_CLK_SAI4_IPG>, <&clk IMX8MQ_CLK_DUMMY>,
		<&clk IMX8MQ_CLK_SAI4_ROOT>, <&clk IMX8MQ_CLK_DUMMY>,
		<&clk IMX8MQ_CLK_DUMMY>, <&clk IMX8MQ_AUDIO_PLL1_OUT>,
		<&clk IMX8MQ_AUDIO_PLL2_OUT>;
	clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3", "pll8k", "pll11k";
	status = "okay";
};

&pgc_gpu {
	power-supply = <&sw1a_reg>;
};

&pgc_vpu {
	power-supply = <&sw1c_reg>;
};

&vpu {
	status = "okay";
};

&gpu3d {
	status = "okay";
};

&irqsteer {
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&mu {
	status = "okay";
};

&snvs_rtc {
	status = "disabled";
};

